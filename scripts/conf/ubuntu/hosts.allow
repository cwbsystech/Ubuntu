# Gerado:       cwb.systech.com.br -- Soluçoes em TI
# Autor:        Jensy Gregorio Gomez
# Bio:          Têcnico em Informatica e Eletronica
# WhatsApp:     (41) 99896-2670    /    99799-3164
# Date:         01/01/2022
# Versão:       0.01
#
# Testado e homologado para a versão do Ubuntu Server 20.04.x LTS x64
#
# Comando utilizado para verificar se o serviço (daemon) de rede tem suporte ao 
# TCPWrappers: ldd /usr/sbin/sshd | grep libwrap (Biblioteca LibWrap)
# Logando todas as informações de acesso nos arquivos de Log's de cada serviço
# em: /var/log/tcpwrappers-allow-*.log (* nome do serviço)
#
# Permitindo a Rede $_NETWORK/$_MASCARA se autenticar remotamente no Servidor de OpenSSH
# DAEMON   CLIENT     OPTION
sshd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-ssh.log
#
# Permitindo a Rede $_NETWORK/$_MASCARA se autenticar remotamente no Servidor de MySQL
# DAEMON   CLIENT     OPTION
mysqld: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-mysql.log
#
# Permitindo a Rede $_NETWORK/$_MASCARA se autenticar remotamente no Servidor de Telnet
# DAEMON   CLIENT     OPTION
in.telnetd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-telnet.log
#
# Permitindo a Rede $_NETWORK/$_MASCARA se autenticar remotamente no Servidor de FTP
# DAEMON   CLIENT     OPTION
vsftpd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-vsftpd.log
#
# Permitindo a Rede $_NETWORK/$_MASCARA se conectar remotamente no Servidor de TFTP
# DAEMON   CLIENT     OPTION
in.tftpd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-tftpd.log
#
# Permitindo a Rede $_NETWORK/$_MASCARA se autenticar remotamente no Servidor de NFS
# DAEMON   CLIENT     OPTION
portmap: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-nfs.log
lockd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-nfs.log
rquotad: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-nfs.log
mountd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-nfs.log
statd: $_NETWORK/$_MASCARA: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-nfs.log
#
# Permitindo que todas as redes acesse os serviços remotos do Servidor Bacula
# DAEMON   CLIENT     OPTION
bacula-fd: ALL: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-bacula.log
bacula-sd: ALL: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-bacula.log
bacula-dir: ALL: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-bacula.log
$_NOME_FQDN-fd: ALL: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-bacula.log
$_NOME_FQDN-mon: ALL: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-bacula.log
$_NOME_FQDN-dir: ALL: spawn /bin/echo "$(date -u) | Serviço Remoto %d | Host Remoto %c | Porta Remota %r | Processo Local %p" >> /var/log/tcpwrappers-allow-bacula.log
#
